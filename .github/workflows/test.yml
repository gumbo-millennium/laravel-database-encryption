name: "Run unit tests"

on:
  - push

jobs:
  test:
    name: "Test (L${{ matrix.laravel }}, P${{ matrix.php }}, ${{ matrix.version }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['7.1', '7.2', '7.3', '7.4', '8.0']
        laravel: ['5.5', '5.6', '5.7', '5.8', '6.x', '7.x']
        version: ['source', 'dist']
        include:
          # Dependencies for 5.5
          - laravel: '5.5'
            phpunit-version: '^6.0'
            laravel-version: '~5.5.0'
            orchestra-version: '~3.5.0'

          # Dependencies for 5.6
          - laravel: '5.6'
            phpunit-version: '^7.0'
            laravel-version: '~5.6.0'
            orchestra-version: '~3.6.0'

          # Dependencies for 5.7
          - laravel: '5.7'
            phpunit-version: '^7.0'
            laravel-version: '~5.7.0'
            orchestra-version: '~3.7.0'

          # Dependencies for 5.8
          - laravel: '5.8'
            phpunit-version: '^7.0'
            laravel-version: '~5.8.0'
            orchestra-version: '~3.8.0'

          # Dependencies for 6.x
          - laravel: '6.x'
            phpunit-version: '^8.3'
            laravel-version: '^6.0'
            orchestra-version: '^4.0'

          # Dependencies for 7.x
          - laravel: '7.x'
            phpunit-version: '^8.5'
            laravel-version: '^7.0'
            orchestra-version: '^5.0'
        exclude:
          # Laravel 6.x is 7.2+
          - php: '7.1'
            laravel: '6.x'
          - php: '7.1'
            laravel: '7.x'
          # Don't test Laravel <6.x on 8.0+
          - php: '8.0'
            laravel: '5.5'
          - php: '8.0'
            laravel: '5.6'
          - php: '8.0'
            laravel: '5.7'
          - php: '8.0'
            laravel: '5.8'
    services:
      database:
        image: mysql:5
        ports:
          - 13306:3306
        env:
          MYSQL_ROOT_PASSWORD: 'test'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php }}
          extensions: json,mbstring,pdo,mysql,dom
          coverage: xdebug

      - name: Start build on Code Climate
        continue-on-error: true
        run: |
          curl -o ./cc-test-reporter -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Get user-level Composer cache
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup Composer cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ matrix.version }}-${{ matrix.laravel }}-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.version }}-${{ matrix.laravel }}-${{ matrix.php }}-
            composer-${{ runner.os }}-${{ matrix.version }}-${{ matrix.laravel }}-
            composer-${{ runner.os }}-${{ matrix.version }}-
            composer-${{ runner.os }}-

      - name: Attempt to be php 7.4 on php 8.0
        if: ( matrix.php == '8.0' )
        run: composer config platform.php 7.4.5

      - name: Install dependencies
        run: |
          composer require --no-update \
            phpunit/phpunit:${{ matrix.phpunit-version }} \
            laravel/framework:${{ matrix.laravel-version }} \
            orchestra/database:${{ matrix.orchestra-version }} \
            orchestra/testbench:${{ matrix.orchestra-version }}

      - name: Install composer dependencies
        run: composer install --no-suggest --no-progress --no-interaction --prefer-${{ matrix.version }}

      - name: Run unit tests
        run: vendor/bin/phpunit --coverage-text
        env:
          TESTING_DB_PASS: 'test'
          TESTING_DB_PORT: 13306

      - name: Complete build on Code Climate
        continue-on-error: true
        run: ./cc-test-reporter after-build --coverage-input-type clover --prefix "${GITHUB_WORKSPACE}" --exit-code ${{ job.status == 'failure' }}
        if: always()

      - name: Upload coverage to Code Climate
        continue-on-error: true
        run: vendor/bin/test-reporter
